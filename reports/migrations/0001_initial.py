# Generated by Django 4.1.7 on 2023-04-02 01:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, unique=True, verbose_name='Название')),
                ('short_title', models.CharField(max_length=4, unique=True, verbose_name='Краткое название')),
            ],
            options={
                'verbose_name': 'Факультеты',
            },
        ),
        migrations.CreateModel(
            name='LecturesSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Курс')),
                ('stream_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Поток')),
                ('lecture_datetime', models.DateTimeField(verbose_name='Дата и время')),
                ('lecture_url', models.URLField(max_length=500, verbose_name='Ссылка')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Ссылка была разослана')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.faculty', verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Лекции',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Курс')),
                ('stream_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Поток')),
                ('group_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Группа')),
                ('position_in_group', models.PositiveSmallIntegerField(verbose_name='№ в группе')),
                ('surname', models.CharField(blank=True, max_length=40, verbose_name='Фамилия')),
                ('name', models.CharField(blank=True, max_length=40, verbose_name='Имя')),
                ('f_name', models.CharField(blank=True, max_length=40, verbose_name='Отчество')),
                ('is_foreigner', models.BooleanField(verbose_name='Иностранец')),
                ('is_head', models.BooleanField(verbose_name='Староста')),
                ('login', models.CharField(max_length=30, unique=True, verbose_name='Логин')),
                ('password', models.CharField(max_length=30, verbose_name='Пароль')),
                ('vk_id', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='ID Вконтакте')),
                ('is_locked', models.BooleanField(default=True, verbose_name='Заблокирован Старостой')),
                ('is_fired', models.BooleanField(default=False, verbose_name='Отчислен')),
                ('is_head_assistant', models.BooleanField(default=False, verbose_name='Помощник старосты')),
                ('can_add_lecture_url', models.CharField(blank=True, default='', max_length=20, verbose_name='Добавляет ссылки на лекции')),
                ('get_lec_urls_automatically', models.BooleanField(default=False, verbose_name='Автоматически получать ссылки')),
                ('is_head_of_head', models.BooleanField(default=False, verbose_name='Староста курса')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.faculty', verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ['faculty', 'course_n', 'group_n', 'position_in_group'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Курс')),
                ('half', models.PositiveSmallIntegerField(db_index=True, verbose_name='Семестр в году')),
                ('full_title', models.CharField(max_length=150, verbose_name='Полное наименование')),
                ('short_title', models.CharField(max_length=20, verbose_name='Краткое наименование')),
                ('duration', models.PositiveSmallIntegerField(verbose_name='Длительность (количество пар)')),
                ('hours_per_pair', models.PositiveSmallIntegerField(verbose_name='Длительность 1 пары')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.faculty', verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='StudentsVaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vac_num', models.SmallIntegerField(verbose_name='№ вакцинации')),
                ('vac_step', models.SmallIntegerField(verbose_name='Этап')),
                ('vac_date', models.DateField(verbose_name='ДатаВакцинации')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Вакцинация студентов',
            },
        ),
        migrations.CreateModel(
            name='StudentsDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(max_length=50, verbose_name='Вид документа')),
                ('doc_url', models.URLField(verbose_name='Ссылка на документ')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Документы студентов',
            },
        ),
        migrations.CreateModel(
            name='PairsSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Курс')),
                ('group_n', models.PositiveSmallIntegerField(db_index=True, verbose_name='Группа')),
                ('pr_lk_datetime', models.DateTimeField(verbose_name='Дата и время')),
                ('pair_n', models.PositiveSmallIntegerField(verbose_name='№ пары')),
                ('is_practical', models.BooleanField(verbose_name='Практическое занятие (лк = нет)')),
                ('is_reported', models.BooleanField(verbose_name='Рапорт отправлен')),
                ('pr_lk_comment', models.URLField(blank=True, verbose_name='Комментарий')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.faculty', verbose_name='Факультет')),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reports.lecturesschedule', verbose_name='Лекция')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.subject', verbose_name='Пара')),
            ],
            options={
                'verbose_name': 'Расписание пар',
            },
        ),
        migrations.CreateModel(
            name='MissingPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('missing_reason', models.CharField(max_length=1, verbose_name='Причина отсутствия')),
                ('is_debt', models.BooleanField(verbose_name='Отработано')),
                ('work_out_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата отработки')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.pairsschedule', verbose_name='Пара')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Пропуски',
            },
        ),
        migrations.AddField(
            model_name='lecturesschedule',
            name='stud_add_lec',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reports.student', verbose_name='Кто добавил лекцию'),
        ),
        migrations.AddField(
            model_name='lecturesschedule',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.subject', verbose_name='Курация'),
        ),
        migrations.CreateModel(
            name='ChangesAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('past_missing_reason', models.CharField(max_length=1, verbose_name='Причина до')),
                ('new_missing_reason', models.CharField(max_length=1, verbose_name='Причина после')),
                ('change_datetime', models.DateTimeField(verbose_name='Дата отработки')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.pairsschedule', verbose_name='Пара')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Изменения рапортичек',
            },
        ),
    ]
